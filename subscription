import { map } from 'rxjs/operators';

function getActiveSubscriptionObservable(userDetail: GetClientIDSearchRequest, from?: string) {
    return this.subscriptionsService.GetSubscriptions(userDetail, from).pipe(
        map(response => {
            // Filter records where endDate is null
            const activeSubscriptions = response.data?.filter(subscription => 
                subscription.endDate === null || subscription.endDate === undefined
            ) || [];
            
            if (activeSubscriptions.length === 0) {
                return { ...response, data: [] };
            }
            
            // Select the one with latest startDate
            const latestSubscription = activeSubscriptions.reduce((latest, current) => {
                const latestDate = new Date(latest.startDate);
                const currentDate = new Date(current.startDate);
                return currentDate > latestDate ? current : latest;
            });
            
            return { ...response, data: [latestSubscription] };
        })
    );
}